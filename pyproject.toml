[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "qt-theme-studio"
version = "0.1.0"
description = "統合テーマエディターGUIアプリケーション"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Qt-Theme-Studio Team"}
]
keywords = ["qt", "theme", "gui", "editor", "pyside6", "pyqt6", "pyqt5"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: User Interfaces",
    "Topic :: Desktop Environment",
]
requires-python = ">=3.9"

# 依存関係の定義
dependencies = [
    # qt-theme-managerは必ずGitHubリポジトリから直接インストール
    "qt-theme-manager @ git+https://github.com/scottlz0310/Qt-Theme-Manager.git",
    # Qt フレームワーク（PySide6を推奨、PyQt6/PyQt5はフォールバック）
    "PySide6>=6.0.0",
    # 画像処理・プレビュー生成
    "Pillow>=8.0.0",
    # コンソール出力の色付け
    "colorama>=0.4.0",
]

# オプション依存関係
[project.optional-dependencies]
dev = [
    # テスト関連
    "pytest>=7.0.0",
    "pytest-qt>=4.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    # コード品質
    "ruff>=0.3.0",  # 高速なPythonリンター・フォーマッター
    "black>=22.0.0",  # フォールバック用
    "isort>=5.10.0",  # フォールバック用
    "flake8>=5.0.0",  # フォールバック用
    "autoflake>=1.4.0",
    "mypy>=1.0.0",
    # セキュリティ
    "bandit>=1.7.0",
    "safety>=2.3.0",
    # Pre-commit
    "pre-commit>=2.20.0",
]
qt6 = [
    "PyQt6>=6.0.0",
]
qt5 = [
    "PyQt5>=5.15.0",
]

# エントリーポイントの定義
[project.scripts]
qt-theme-studio = "qt_theme_studio.main:main"

[project.gui-scripts]
qt-theme-studio-gui = "qt_theme_studio.main:main"

[project.urls]
Homepage = "https://github.com/your-org/qt-theme-studio"
Repository = "https://github.com/your-org/qt-theme-studio"
Issues = "https://github.com/your-org/qt-theme-studio/issues"
Documentation = "https://github.com/your-org/qt-theme-studio/docs"

# setuptools設定
[tool.setuptools]
packages = ["qt_theme_studio"]

[tool.setuptools.package-data]
qt_theme_studio = [
    "resources/icons/*",
    "resources/templates/*", 
    "resources/styles/*",
]

# Black設定（GUIツール標準の88文字）
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # ディレクトリ
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort設定
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest設定
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gui: marks tests as GUI tests requiring display",
]

# カバレッジ設定
[tool.coverage.run]
source = ["qt_theme_studio"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# ruff設定（高速なPythonリンター・フォーマッター）
[tool.ruff]
# ターゲットPythonバージョン
target-version = "py39"
# 行の最大長
line-length = 88
# インデント
indent-width = 4

# 除外するファイル・ディレクトリ
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    ".mypy_cache",
    ".pytest_cache",
    "*.egg-info",
    "htmlcov",
    ".coverage",
]

# リンター設定
[tool.ruff.lint]
# 有効にするルール
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "TID", # flake8-tidy-imports
    "LOG", # flake8-logging-format
    "PTH", # flake8-use-pathlib
    "RUF", # ruff-specific rules
]

# 無効にするルール
ignore = [
    "E501",  # line too long (blackが処理)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "E203",  # whitespace before ':'
]

# インポート整理設定
[tool.ruff.lint.isort]
known-first-party = ["qt_theme_studio"]
known-third-party = ["PySide6", "PyQt6", "PyQt5", "PIL", "colorama"]
force-single-line = false
combine-as-imports = true

# フォーマット設定
[tool.ruff.format]
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# flake8設定（ruffに置き換えのため無効化）
# [tool.flake8]
# max-line-length = 88
# extend-ignore = ["E203", "W503"]
# exclude = [
#     ".git",
#     "__pycache__",
#     ".venv",
#     "venv",
#     "build",
#     "dist",
#     ".mypy_cache",
#     ".pytest_cache"
# ]

# mypy設定
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "qt_theme_manager.*",
    "PySide6.*",
    "PyQt6.*", 
    "PyQt5.*",
]
ignore_missing_imports = true