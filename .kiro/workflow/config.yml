# Qt-Theme-Studio 統合ワークフロー設定
# 全ワークフローの統一設定ファイル

# ワークフロー定義
workflows:
  # Pre-commitフック
  pre_commit:
    enabled: true
    description: "コミット前の自動品質チェック"
    timeout: 300  # 5分
    steps:
      - name: "ruff_lint"
        description: "Ruffリンティングチェック"
        command: "ruff check . --output-format=json"
        required: true
        timeout: 60
        retry_count: 1
        
      - name: "ruff_format"
        description: "Ruffフォーマットチェック"
        command: "ruff format --check ."
        required: true
        timeout: 60
        retry_count: 1
        
      - name: "basic_tests"
        description: "基本テスト実行"
        command: "pytest tests/unit/ -x --tb=short"
        required: false
        timeout: 120
        retry_count: 0
        
      - name: "japanese_logs"
        description: "日本語ログメッセージ検証"
        command: "python scripts/validate_japanese_logs.py"
        required: true
        timeout: 30
        retry_count: 0

  # CI/CDパイプライン
  ci_pipeline:
    enabled: true
    description: "継続的インテグレーション"
    timeout: 1800  # 30分
    parallel: true
    steps:
      - name: "environment_setup"
        description: "環境セットアップ"
        command: "python scripts/dev_setup.py --ci-mode"
        required: true
        timeout: 300
        
      - name: "quality_check"
        description: "品質チェック統合実行"
        command: "python scripts/quality_check.py --full"
        required: true
        timeout: 300
        depends_on: ["environment_setup"]
        
      - name: "full_tests"
        description: "完全テストスイート"
        command: "pytest --cov=qt_theme_studio --cov-report=xml --cov-report=html"
        required: true
        timeout: 600
        depends_on: ["environment_setup"]
        
      - name: "security_scan"
        description: "セキュリティスキャン"
        command: "python scripts/security_scanner.py --report-format=json"
        required: false
        timeout: 180
        depends_on: ["environment_setup"]
        
      - name: "performance_tests"
        description: "パフォーマンステスト"
        command: "pytest tests/test_performance_benchmarks.py --benchmark-json=benchmark.json"
        required: false
        timeout: 300
        depends_on: ["environment_setup"]

  # リリース自動化
  release:
    enabled: true
    description: "リリース自動化プロセス"
    timeout: 3600  # 1時間
    steps:
      - name: "pre_release_check"
        description: "リリース前検証"
        command: "python scripts/pre_release_check.py --strict"
        required: true
        timeout: 300
        
      - name: "final_tests"
        description: "最終テスト実行"
        command: "pytest --maxfail=1"
        required: true
        timeout: 600
        depends_on: ["pre_release_check"]
        
      - name: "build_packages"
        description: "パッケージビルド"
        command: "python -m build --wheel --sdist"
        required: true
        timeout: 180
        depends_on: ["final_tests"]
        
      - name: "generate_checksums"
        description: "チェックサム生成"
        command: "python scripts/build_release.py --checksums"
        required: true
        timeout: 60
        depends_on: ["build_packages"]
        
      - name: "create_archives"
        description: "アーカイブ作成"
        command: "python scripts/build_release.py --create-archives"
        required: true
        timeout: 120
        depends_on: ["generate_checksums"]

  # 開発環境セットアップ
  dev_setup:
    enabled: true
    description: "開発環境自動セットアップ"
    timeout: 900  # 15分
    steps:
      - name: "detect_environment"
        description: "環境検出"
        command: "python scripts/qt_detector.py --detect-all"
        required: true
        timeout: 30
        
      - name: "install_dependencies"
        description: "依存関係インストール"
        command: "pip install -e .[dev]"
        required: true
        timeout: 300
        depends_on: ["detect_environment"]
        
      - name: "setup_pre_commit"
        description: "Pre-commitセットアップ"
        command: "python scripts/pre_commit_setup.py --auto"
        required: true
        timeout: 120
        depends_on: ["install_dependencies"]
        
      - name: "verify_installation"
        description: "インストール検証"
        command: "python -c 'import qt_theme_studio; print(\"インストール成功\")'"
        required: true
        timeout: 30
        depends_on: ["setup_pre_commit"]

  # ドキュメント生成
  docs_generation:
    enabled: true
    description: "ドキュメント自動生成"
    timeout: 600  # 10分
    steps:
      - name: "api_docs"
        description: "APIドキュメント生成"
        command: "python scripts/doc_generator.py --api"
        required: true
        timeout: 180
        
      - name: "markdown_validation"
        description: "Markdown検証"
        command: "python scripts/markdown_validator.py --all"
        required: true
        timeout: 120
        
      - name: "doc_update_check"
        description: "ドキュメント更新チェック"
        command: "python scripts/doc_update_checker.py"
        required: false
        timeout: 60

# 品質閾値設定
quality_thresholds:
  # テストカバレッジ
  coverage_minimum: 80
  coverage_target: 90
  
  # テスト成功率
  test_success_rate: 95
  
  # セキュリティスコア（1-10）
  security_score: 8.0
  
  # パフォーマンス閾値
  performance:
    max_startup_time: 5.0  # 秒
    max_memory_usage: 512  # MB
    max_response_time: 1.0  # 秒
  
  # コード品質
  code_quality:
    max_complexity: 10
    max_line_length: 88
    min_docstring_coverage: 80

# 通知設定
notifications:
  enabled: true
  channels:
    - type: "console"
      level: "INFO"
      format: "%(asctime)s - %(levelname)s - %(message)s"
      
    - type: "file"
      level: "DEBUG"
      path: "logs/workflow.log"
      max_size: "10MB"
      backup_count: 5
      
    - type: "email"
      enabled: false
      level: "ERROR"
      smtp_server: "localhost"
      recipients: []

# エラーハンドリング設定
error_handling:
  # 自動復旧設定
  auto_recovery:
    enabled: true
    max_retries: 3
    retry_delay: 5  # 秒
    
  # エラー報告
  error_reporting:
    enabled: true
    include_stack_trace: true
    include_environment_info: true
    
  # 復旧戦略
  recovery_strategies:
    network_error:
      - "wait_and_retry"
      - "use_cache"
    dependency_error:
      - "reinstall_dependencies"
      - "use_fallback"
    permission_error:
      - "request_elevation"
      - "use_alternative_path"

# プラグイン設定
plugins:
  enabled: true
  auto_load: true
  search_paths:
    - "scripts/plugins"
    - ".kiro/plugins"
  
  # 利用可能なプラグイン
  available:
    custom_linter:
      enabled: false
      module: "scripts.plugins.custom_linter"
      
    slack_notifier:
      enabled: false
      module: "scripts.plugins.slack_notifier"
      config:
        webhook_url: ""
        channel: "#development"

# 環境固有設定
environments:
  development:
    debug: true
    log_level: "DEBUG"
    skip_security_scan: true
    
  testing:
    debug: false
    log_level: "INFO"
    parallel_tests: true
    
  production:
    debug: false
    log_level: "WARNING"
    strict_validation: true
    
  ci:
    debug: false
    log_level: "INFO"
    headless: true
    timeout_multiplier: 2.0

# キャッシュ設定
cache:
  enabled: true
  directory: ".kiro/cache"
  max_size: "1GB"
  ttl: 86400  # 24時間（秒）
  
  # キャッシュ対象
  cache_types:
    dependencies: true
    test_results: true
    build_artifacts: false
    documentation: true

# 監視設定
monitoring:
  enabled: true
  metrics_collection: true
  performance_tracking: true
  
  # メトリクス保存
  metrics_storage:
    type: "file"
    path: "logs/metrics.json"
    retention_days: 30
  
  # アラート条件
  alerts:
    high_failure_rate:
      threshold: 20  # %
      window: 3600  # 1時間
      
    slow_execution:
      threshold: 300  # 5分
      
    high_memory_usage:
      threshold: 80  # %

# 国際化設定
i18n:
  default_language: "ja"
  supported_languages: ["ja", "en"]
  message_files:
    ja: ".kiro/i18n/messages_ja.yml"
    en: ".kiro/i18n/messages_en.yml"

# セキュリティ設定
security:
  # 実行権限
  execution_policy:
    allow_shell_commands: true
    allowed_commands:
      - "python"
      - "pip"
      - "pytest"
      - "ruff"
      - "git"
    
  # ファイルアクセス制限
  file_access:
    read_only_paths: []
    forbidden_paths:
      - "/etc"
      - "/root"
      - "~/.ssh"
  
  # 環境変数制限
  environment_variables:
    allowed_prefixes:
      - "WORKFLOW_"
      - "QT_"
      - "PYTEST_"
    forbidden_variables:
      - "PATH"
      - "HOME"

# バックアップ設定
backup:
  enabled: true
  automatic: true
  schedule: "daily"
  
  # バックアップ対象
  include:
    - "logs/"
    - ".kiro/workflow/"
    - "scripts/"
  
  # バックアップ除外
  exclude:
    - "*.pyc"
    - "__pycache__/"
    - ".git/"
    - "venv/"
  
  # 保存設定
  retention:
    daily: 7
    weekly: 4
    monthly: 12